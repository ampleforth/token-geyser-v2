{"PowerSwitchFactory":{"address":"0x510393Bac3905781086CdfA879d4cBF4F7901629","abi":["event InstanceAdded(address instance)","event InstanceRemoved(address instance)","function create(bytes args) returns (address)","function create2(bytes, bytes32) pure returns (address)","function instanceAt(uint256 index) view returns (address instance)","function instanceCount() view returns (uint256 count)","function isInstance(address instance) view returns (bool validity)"]},"RewardPoolFactory":{"address":"0x6aE1d838327499fD42A708F1CeA8CE3b8D7975e4","abi":["event InstanceAdded(address instance)","event InstanceRemoved(address instance)","function create(bytes args) returns (address)","function create2(bytes, bytes32) pure returns (address)","function instanceAt(uint256 index) view returns (address instance)","function instanceCount() view returns (uint256 count)","function isInstance(address instance) view returns (bool validity)"]},"VaultTemplate":{"address":"0x5C8884839B77383154E732021580F82F41998Fa6","abi":["event Locked(address delegate, address token, uint256 amount)","event RageQuit(address delegate, address token, bool notified, string reason)","event Unlocked(address delegate, address token, uint256 amount)","function LOCK_TYPEHASH() view returns (bytes32)","function RAGEQUIT_GAS() view returns (uint256)","function UNLOCK_TYPEHASH() view returns (bytes32)","function calculateLockID(address delegate, address token) pure returns (bytes32 lockID)","function checkBalances() view returns (bool validity)","function getBalanceDelegated(address token, address delegate) view returns (uint256 balance)","function getBalanceLocked(address token) view returns (uint256 balance)","function getLockAt(uint256 index) view returns (tuple(address delegate, address token, uint256 balance) lockData)","function getLockSetCount() view returns (uint256 count)","function getNonce() view returns (uint256 nonce)","function getPermissionHash(bytes32 eip712TypeHash, address delegate, address token, uint256 amount, uint256 nonce) view returns (bytes32 permissionHash)","function initialize()","function initializeLock()","function isValidSignature(bytes32 permissionHash, bytes signature) view returns (bytes4)","function lock(address token, uint256 amount, bytes permission)","function nft() view returns (address nftAddress)","function owner() view returns (address ownerAddress)","function rageQuit(address delegate, address token) returns (bool notified, string error)","function transferERC20(address token, address to, uint256 amount)","function transferETH(address to, uint256 amount) payable","function unlock(address token, uint256 amount, bytes permission)"]},"VaultFactory":{"address":"0x9E1fbFEf5508eCB4A45632CE638A44a160E4979D","abi":["constructor(address template)","event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)","event ApprovalForAll(address indexed owner, address indexed operator, bool approved)","event InstanceAdded(address instance)","event InstanceRemoved(address instance)","event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)","function addressToUint(address vault) pure returns (uint256 tokenId)","function approve(address to, uint256 tokenId)","function balanceOf(address owner) view returns (uint256)","function baseURI() view returns (string)","function create(bytes) returns (address vault)","function create() returns (address vault)","function create2(bytes32 salt) returns (address vault)","function create2(bytes, bytes32 salt) returns (address vault)","function getApproved(uint256 tokenId) view returns (address)","function getTemplate() view returns (address template)","function instanceAt(uint256 index) view returns (address instance)","function instanceCount() view returns (uint256 count)","function isApprovedForAll(address owner, address operator) view returns (bool)","function isInstance(address instance) view returns (bool validity)","function name() view returns (string)","function ownerOf(uint256 tokenId) view returns (address)","function predictCreate2Address(bytes32 salt) view returns (address instance)","function safeTransferFrom(address from, address to, uint256 tokenId)","function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)","function setApprovalForAll(address operator, bool approved)","function supportsInterface(bytes4 interfaceId) view returns (bool)","function symbol() view returns (string)","function tokenByIndex(uint256 index) view returns (uint256)","function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)","function tokenURI(uint256 tokenId) view returns (string)","function totalSupply() view returns (uint256)","function transferFrom(address from, address to, uint256 tokenId)","function uint256ToAddress(uint256 tokenId) pure returns (address vault)"]},"GeyserRegistry":{"address":"0xC4AB03ee92f0e08211b55015b6aCA64CbaEbA382","abi":["event InstanceAdded(address instance)","event InstanceRemoved(address instance)","event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","function instanceAt(uint256 index) view returns (address instance)","function instanceCount() view returns (uint256 count)","function isInstance(address instance) view returns (bool validity)","function owner() view returns (address)","function register(address instance)","function renounceOwnership()","function transferOwnership(address newOwner)"]},"GeyserTemplate":{"abi":["event BonusTokenRegistered(address token)","event GeyserCreated(address rewardPool, address powerSwitch)","event GeyserFunded(uint256 amount, uint256 duration)","event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event RewardClaimed(address vault, address token, uint256 amount)","event Staked(address vault, uint256 amount)","event Unstaked(address vault, uint256 amount)","event VaultFactoryRegistered(address factory)","event VaultFactoryRemoved(address factory)","function BASE_SHARES_PER_WEI() view returns (uint256)","function MAX_REWARD_TOKENS() view returns (uint256)","function MAX_STAKES_PER_VAULT() view returns (uint256)","function calculateReward(uint256 unlockedRewards, uint256 stakeAmount, uint256 stakeDuration, uint256 totalStakeUnits, tuple(uint256 floor, uint256 ceiling, uint256 time) rewardScaling) pure returns (uint256 reward)","function calculateRewardFromStakes(tuple(uint256 amount, uint256 timestamp)[] stakes, uint256 unstakeAmount, uint256 unlockedRewards, uint256 totalStakeUnits, uint256 timestamp, tuple(uint256 floor, uint256 ceiling, uint256 time) rewardScaling) pure returns (tuple(uint256 lastStakeAmount, uint256 newStakesCount, uint256 reward, uint256 newTotalStakeUnits) out)","function calculateStakeUnits(uint256 amount, uint256 start, uint256 end) pure returns (uint256 stakeUnits)","function calculateTotalStakeUnits(tuple(uint256 amount, uint256 timestamp)[] stakes, uint256 timestamp) pure returns (uint256 totalStakeUnits)","function calculateUnlockedRewards(tuple(uint256 duration, uint256 start, uint256 shares)[] rewardSchedules, uint256 rewardBalance, uint256 sharesOutstanding, uint256 timestamp) pure returns (uint256 unlockedRewards)","function fundGeyser(uint256 amount, uint256 duration)","function getBonusTokenAtIndex(uint256 index) view returns (address bonusToken)","function getBonusTokenSetLength() view returns (uint256 length)","function getCurrentStakeReward(address vault, uint256 stakeAmount) view returns (uint256 reward)","function getCurrentTotalStakeUnits() view returns (uint256 totalStakeUnits)","function getCurrentUnlockedRewards() view returns (uint256 unlockedRewards)","function getCurrentVaultReward(address vault) view returns (uint256 reward)","function getCurrentVaultStakeUnits(address vault) view returns (uint256 stakeUnits)","function getFutureStakeReward(address vault, uint256 stakeAmount, uint256 timestamp) view returns (uint256 reward)","function getFutureTotalStakeUnits(uint256 timestamp) view returns (uint256 totalStakeUnits)","function getFutureUnlockedRewards(uint256 timestamp) view returns (uint256 unlockedRewards)","function getFutureVaultReward(address vault, uint256 timestamp) view returns (uint256 reward)","function getFutureVaultStakeUnits(address vault, uint256 timestamp) view returns (uint256 stakeUnits)","function getGeyserData() view returns (tuple(address stakingToken, address rewardToken, address rewardPool, tuple(uint256 floor, uint256 ceiling, uint256 time) rewardScaling, uint256 rewardSharesOutstanding, uint256 totalStake, uint256 totalStakeUnits, uint256 lastUpdate, tuple(uint256 duration, uint256 start, uint256 shares)[] rewardSchedules) geyser)","function getPowerController() view returns (address controller)","function getPowerSwitch() view returns (address powerSwitch)","function getVaultData(address vault) view returns (tuple(uint256 totalStake, tuple(uint256 amount, uint256 timestamp)[] stakes) vaultData)","function getVaultFactoryAtIndex(uint256 index) view returns (address factory)","function getVaultFactorySetLength() view returns (uint256 length)","function initialize(address ownerAddress, address rewardPoolFactory, address powerSwitchFactory, address stakingToken, address rewardToken, tuple(uint256 floor, uint256 ceiling, uint256 time) rewardScaling)","function initializeLock()","function isOffline() view returns (bool status)","function isOnline() view returns (bool status)","function isShutdown() view returns (bool status)","function isValidAddress(address target) view returns (bool validity)","function isValidVault(address target) view returns (bool validity)","function owner() view returns (address)","function rageQuit()","function registerBonusToken(address bonusToken)","function registerVaultFactory(address factory)","function removeVaultFactory(address factory)","function renounceOwnership()","function rescueTokensFromRewardPool(address token, address recipient, uint256 amount)","function stake(address vault, uint256 amount, bytes permission)","function transferOwnership(address newOwner)","function unstakeAndClaim(address vault, uint256 amount, bytes permission)"]},"RouterV1":{"address":"0xb21bEF79929Fa34F75f81e866a13714DE473ffe2","abi":["function create2Vault(address vaultFactory, bytes32 salt) returns (address vault)","function create2VaultAndStake(address geyser, address vaultFactory, address vaultOwner, uint256 amount, bytes32 salt, bytes permission) returns (address vault)","function create2VaultPermitAndStake(address geyser, address vaultFactory, address vaultOwner, bytes32 salt, tuple(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, bytes permission) returns (address vault)","function depositStake(address geyser, address vault, uint256 amount, bytes permission)","function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)","function permitAndStake(address geyser, address vault, tuple(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, bytes permission)","function stakeMulti(tuple(address geyser, address vault, uint256 amount, bytes permission)[] requests)","function unstakeMulti(tuple(address geyser, address vault, uint256 amount, bytes permission)[] requests)"]}}